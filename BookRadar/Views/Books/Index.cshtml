@model BookRadar.Web.Models.BookSearchPageVm
@{
    ViewData["Title"] = "Inicio";
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container">
        <div class="hero-content text-center">
            <div class="hero-icon mb-4">
                <i class="fas fa-book-open"></i>
            </div>
            <h1 class="hero-title mb-3">BookRadar</h1>
            <div class="hero-stats">
                <form asp-action="Index" method="post" class="search-form" id="searchForm">
                    @Html.AntiForgeryToken()
                    <div class="search-input-group">
                        <div class="search-input-wrapper">
                            <i class="fas fa-user search-icon"></i>
                            <input asp-for="Autor" class="search-input @(ViewData.ModelState[nameof(Model.Autor)]?.Errors.Any() == true ? "is-invalid" : "")"
                                   placeholder="Ej: Gabriel García Márquez, Stephen King, Isabel Allende..." 
                                   maxlength="100" />
                            <button type="submit" class="search-button" id="searchButton">
                                <i class="fas fa-search me-2"></i>
                                Buscar
                            </button>
                        </div>
                        <div class="validation-messages">
                            <span asp-validation-for="Autor" class="text-danger validation-error"></span>
                        </div>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Model?.Message))
                    {
                        <div class="alert alert-info mt-4" role="alert">
                            <i class="fas fa-info-circle me-2"></i>
                            @Model.Message
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Por favor, corrige los siguientes errores:</strong>
                            <ul class="mb-0 mt-2">
                                @foreach (var modelState in ViewData.ModelState.Values)
                                {
                                    foreach (var error in modelState.Errors)
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                }
                            </ul>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Results Section -->
@if (Model?.Resultados?.Any() == true)
{
    <section class="results-section">
        <div class="container">
            <div class="results-wrapper">
                <div class="results-header">
                    <h3 class="results-title">
                        <i class="fas fa-star me-2"></i>
                        Resultados de la búsqueda
                    </h3>
                    <span class="results-badge">
                        @Model.Resultados.Count libro@(Model.Resultados.Count != 1 ? "s" : "")
                    </span>
                </div>
                <partial name="_Results" model="Model.Resultados" />
            </div>
        </div>
    </section>
}

<!-- Features Section -->
<section class="features-section">
    <div class="container">
        <div class="features-wrapper">
            <div class="section-header text-center">
                <h3 class="section-title">¿Por qué elegir BookRadar?</h3>
                <p class="section-subtitle"> </p>
            </div>
            
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-search"></i>
                    </div>
                    <h4>Búsqueda Inteligente</h4>
                    <p>Encuentra libros de cualquier autor con nuestra búsqueda optimizada</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-database"></i>
                    </div>
                    <h4>Base de Datos Completa</h4>
                    <p>Accede a millones de libros a través de la API de Open Library</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-history"></i>
                    </div>
                    <h4>Historial Persistente</h4>
                    <p>Mantén un registro de todas tus búsquedas y descubrimientos</p>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/js/validation-config.js"></script>
    <script src="~/js/validation.js"></script>
    <script>
        // Configuración específica para la página de búsqueda
        document.addEventListener('DOMContentLoaded', function() {
            // Función para mostrar loading en el botón de búsqueda
            function showLoading() {
                if (window.BookRadarUtils) {
                    window.BookRadarUtils.showLoading('searchButton', 'Buscando...');
                }
            }

            // Agregar loading al formulario
            document.getElementById('searchForm').addEventListener('submit', showLoading);

            // Configurar validación en tiempo real
            const autorInput = document.querySelector('input[name="Autor"]');
            if (autorInput) {
                autorInput.addEventListener('input', function() {
                    // La validación se maneja automáticamente por el validador de jQuery
                    this.classList.remove('is-invalid', 'is-valid');
                });
            }

            // Habilitar modo debug en desarrollo (opcional)
            if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                if (window.enableValidationDebug) {
                    window.enableValidationDebug(true);
                }
            }
        });
    </script>
}
